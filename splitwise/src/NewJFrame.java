import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.Map;

import javax.swing.AbstractListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author manpr
 */
public class NewJFrame extends javax.swing.JFrame {

    private Group selectedFrameGroup;
    private GroupList listOfGroups = new GroupList();

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        groupPanel = new javax.swing.JPanel();
        groupInputLabel = new javax.swing.JLabel();
        groupNameInput = new javax.swing.JTextField();
        groupListLabel = new javax.swing.JLabel();
        groupListScrollPane = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList<>();
        createGroupBtn = new javax.swing.JButton();
        deleteGroupBtn = new javax.swing.JButton();
        addMemberPanel = new javax.swing.JPanel();
        addMemberLabel = new javax.swing.JLabel();
        memberNameInput = new javax.swing.JTextField();
        memberListLabel = new javax.swing.JLabel();
        memberListScrollPane = new javax.swing.JScrollPane();
        memberList = new javax.swing.JList<>();
        deleteMemberBtn = new javax.swing.JButton();
        createMemberBtn = new javax.swing.JButton();
        addTransactionPanel = new javax.swing.JPanel();
        amountLabel = new javax.swing.JLabel();
        amountInput = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        descriptionInput = new javax.swing.JTextField();
        payerScrollPane = new javax.swing.JScrollPane();
        payerList = new javax.swing.JList<>();
        payerLabel = new javax.swing.JLabel();
        splitLabel = new javax.swing.JLabel();
        splitScrollPane = new javax.swing.JScrollPane();
        splitList = new javax.swing.JList<>();
        addActivity = new javax.swing.JButton();
        activityPanel = new javax.swing.JPanel();
        activitiesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        showActivityList = new javax.swing.JList<>();
        deleteActivity = new javax.swing.JButton();

        balancePanel = new javax.swing.JPanel();
        balanceLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        balanceSelector = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        balanceList = new javax.swing.JList<>();
        balanceMemberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Splitwise_Replica");

        groupPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        groupInputLabel.setText("Enter Group");

        groupNameInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        groupListLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        groupListLabel.setText("Group List");

        groupList.setBackground(new java.awt.Color(255, 255, 204));

        // custom code
        initializeGroupPanel();

        groupListScrollPane.setViewportView(groupList);
        createGroupBtn.setText("Create Group");

        deleteGroupBtn.setBackground(new java.awt.Color(245, 66, 66));
        deleteGroupBtn.setText("Delete Group");

        javax.swing.GroupLayout groupPanelLayout = new javax.swing.GroupLayout(groupPanel);
        groupPanel.setLayout(groupPanelLayout);
        groupPanelLayout.setHorizontalGroup(groupPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(groupPanelLayout.createSequentialGroup().addGap(11, 11, 11)
                        .addGroup(groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(groupListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 148,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(groupListLabel)
                                .addGroup(groupPanelLayout.createSequentialGroup().addComponent(groupInputLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(groupNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 89,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, groupPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(deleteGroupBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(createGroupBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap()));
        groupPanelLayout.setVerticalGroup(groupPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(groupPanelLayout.createSequentialGroup().addGap(16, 16, 16)
                        .addGroup(groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(groupInputLabel).addComponent(groupNameInput,
                                        javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createGroupBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(groupListLabel).addGap(18, 18, 18)
                        .addComponent(groupListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteGroupBtn).addGap(17, 17, 17)));

        addMemberPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        addMemberLabel.setText("Enter Member");

        memberNameInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        memberListLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        memberListLabel.setText("Member List");

        memberList.setBackground(new java.awt.Color(255, 255, 204));

        // custom code
        initializeMemberPanel();

        memberListScrollPane.setViewportView(memberList);

        deleteMemberBtn.setBackground(new java.awt.Color(245, 66, 66));
        deleteMemberBtn.setText("Delete Member");

        createMemberBtn.setText("Add Member");

        javax.swing.GroupLayout addMemberPanelLayout = new javax.swing.GroupLayout(addMemberPanel);
        addMemberPanel.setLayout(addMemberPanelLayout);
        addMemberPanelLayout.setHorizontalGroup(addMemberPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addMemberPanelLayout.createSequentialGroup().addGap(11, 11, 11)
                        .addGroup(addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(memberListLabel)
                                .addGroup(addMemberPanelLayout.createSequentialGroup().addComponent(addMemberLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(memberNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 89,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(memberListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 148,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMemberPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(createMemberBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(deleteMemberBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap()));
        addMemberPanelLayout.setVerticalGroup(addMemberPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addMemberPanelLayout.createSequentialGroup().addGap(12, 12, 12)
                        .addGroup(addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(addMemberLabel).addComponent(memberNameInput,
                                        javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createMemberBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memberListLabel).addGap(7, 7, 7)
                        .addComponent(memberListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18).addComponent(deleteMemberBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        addTransactionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        amountLabel.setText("Enter Amount");

        amountInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        descriptionLabel.setText("Description");

        descriptionInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));
        descriptionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionInputActionPerformed(evt);
            }
        });

        payerList.setBackground(new java.awt.Color(240, 240, 204));

        payerScrollPane.setViewportView(payerList);

        payerLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        payerLabel.setText("Choose Payer");

        splitLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        splitLabel.setText("Split Between");

        splitList.setBackground(new java.awt.Color(240, 240, 204));

        // custom code
        initializeAddActivityPanel();

        splitScrollPane.setViewportView(splitList);

        addActivity.setText("Add Activity");
        addActivity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout addTransactionPanelLayout = new javax.swing.GroupLayout(addTransactionPanel);
        addTransactionPanel.setLayout(addTransactionPanelLayout);
        addTransactionPanelLayout.setHorizontalGroup(addTransactionPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addTransactionPanelLayout.createSequentialGroup().addGap(53, 53, 53)
                        .addGroup(addTransactionPanelLayout
                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(addTransactionPanelLayout.createSequentialGroup()
                                        .addGroup(addTransactionPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(amountLabel).addComponent(descriptionLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(addTransactionPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(amountInput).addComponent(descriptionInput,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(addTransactionPanelLayout.createSequentialGroup()
                                        .addGroup(addTransactionPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(payerScrollPane,
                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(payerLabel, javax.swing.GroupLayout.Alignment.LEADING,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addActivity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(addTransactionPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(splitLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(splitScrollPane))
                                        .addGap(87, 87, 87)))));
        addTransactionPanelLayout
                .setVerticalGroup(
                        addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                        addTransactionPanelLayout.createSequentialGroup().addContainerGap()
                                                .addGroup(addTransactionPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(amountLabel).addComponent(amountInput,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(
                                                        addTransactionPanelLayout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(
                                                                        descriptionLabel)
                                                                .addComponent(
                                                                        descriptionInput,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(addTransactionPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(addTransactionPanelLayout.createSequentialGroup()
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(addTransactionPanelLayout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(addTransactionPanelLayout
                                                                                .createSequentialGroup()
                                                                                .addComponent(splitLabel)
                                                                                .addGap(5, 5, 5)
                                                                                .addComponent(splitScrollPane,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        0, Short.MAX_VALUE))
                                                                        .addGroup(addTransactionPanelLayout
                                                                                .createSequentialGroup()
                                                                                .addComponent(payerLabel)
                                                                                .addGap(5, 5, 5)
                                                                                .addComponent(
                                                                                        payerScrollPane,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        0, Short.MAX_VALUE)))
                                                                .addGap(43, 43, 43))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                                addTransactionPanelLayout.createSequentialGroup()
                                                                        .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                        .addComponent(addActivity)
                                                                        .addGap(14, 14, 14)))));

        activityPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        activitiesLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        activitiesLabel.setText("Group Activities or Transactions");

        showActivityList.setBackground(new java.awt.Color(240, 240, 204));

        initializeTransactionPanel();
        jScrollPane1.setViewportView(showActivityList);

        deleteActivity.setBackground(new java.awt.Color(245, 66, 66));
        deleteActivity.setText(" Delete Activity ");
        deleteActivity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        deleteActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActivityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout activityPanelLayout = new javax.swing.GroupLayout(activityPanel);
        activityPanel.setLayout(activityPanelLayout);
        activityPanelLayout.setHorizontalGroup(activityPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(activityPanelLayout.createSequentialGroup().addContainerGap()
                        .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(activitiesLabel)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                        activityPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteActivity).addContainerGap()));
        activityPanelLayout.setVerticalGroup(activityPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(activityPanelLayout.createSequentialGroup().addContainerGap().addComponent(activitiesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteActivity)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        ///////

        balancePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(66, 135, 245)));

        balanceLabel.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        balanceLabel.setText("Balance");

        balanceSelector.setBackground(new java.awt.Color(240, 240, 204));
        balanceSelector.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane2.setViewportView(balanceSelector);

        balanceMemberLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        balanceMemberLabel.setText("Choose Member");

        balanceList.setBackground(new java.awt.Color(240, 240, 204));
        balanceList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane3.setViewportView(balanceList);

        javax.swing.GroupLayout balancePanelLayout = new javax.swing.GroupLayout(balancePanel);
        balancePanel.setLayout(balancePanelLayout);
        balancePanelLayout.setHorizontalGroup(balancePanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(balancePanelLayout.createSequentialGroup().addContainerGap()
                        .addGroup(balancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(balancePanelLayout.createSequentialGroup().addComponent(balanceMemberLabel)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(balancePanelLayout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58,
                                                Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                        balancePanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(balanceLabel).addGap(189, 189, 189)));
        balancePanelLayout.setVerticalGroup(balancePanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(balancePanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(balanceLabel).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(balanceMemberLabel).addGap(7, 7, 7)
                        .addGroup(balancePanelLayout
                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(91, 91, 91)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup().addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(addMemberPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 293,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(groupPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 293,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(addTransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(activityPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(50, 50, 50)
                                .addComponent(balancePanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(90, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
                .createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup().addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(groupPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addTransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(activityPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 400,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addMemberPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup().addGap(274, 274, 274).addComponent(balancePanel,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>

    public void groupNameInputActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void initializeGroupPanel() {
        groupList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No Group Exists" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        groupList.disable();

        groupNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupNameInputActionPerformed(evt);
            }
        });

        // action listener for createbtn
        createGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createGroupBtnActionPerformed(evt);
            }
        });

        deleteGroupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGroupBtnActionPerformed(evt);
            }
        });

        // action listener for group list for selection
        groupList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                String selectedGrpName = groupList.getSelectedValue();
                for (Group g : listOfGroups.getGroupList()) {
                    if (g.getName() == selectedGrpName) {
                        selectedFrameGroup = g;
                    }
                }
                updateMemberList();
            }
        });
    }

    private void initializeMemberPanel() {
        memberList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No Member Exist" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        memberList.disable();

        memberNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberNameInputActionPerformed(evt);
            }
        });

        createMemberBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                createMemberBtnActionPerformed();

            }
        });

        deleteMemberBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                deleteMemberBtnActionPerformed();

            }
        });
        memberList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {

            }
        });
    }

    private void createGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {
        Group g = new Group(groupNameInput.getText());
        listOfGroups.addGroup(g);
        groupNameInput.setText("");
        updateGroupList();
        // select currently created group
        selectedFrameGroup = g;
        groupList.setSelectedValue(g.getName(), true);
    }

    public void updateGroupList() {
        ArrayList<String> grpNames = new ArrayList<>();
        if (listOfGroups.getGroupList().size() == 0) {
            grpNames.add("No Group Exist");
            groupList.disable();
        } else
            groupList.enable();

        for (Group grp : listOfGroups.getGroupList()) {
            grpNames.add(grp.getName());
        }
        groupList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return grpNames.size();
            }

            public String getElementAt(int i) {
                return grpNames.get(i);
            }

        });

    }

    private void deleteGroupBtnActionPerformed(java.awt.event.ActionEvent evt) {
        ArrayList<String> list = (ArrayList<String>) groupList.getSelectedValuesList();
        for (String s : list) {
            if (selectedFrameGroup.getName() == s) {
                selectedFrameGroup = null;
            }
            listOfGroups.deleteGroup(s.hashCode());
        }
        updateGroupList();
        updateMemberList();

    }

    private void createMemberBtnActionPerformed() {
        Member m = new Member(memberNameInput.getText());
        if (selectedFrameGroup != null) {
            selectedFrameGroup.addMember(m);
            memberNameInput.setText("");
            updateMemberList();
        } else {
            JOptionPane.showMessageDialog(null, "Please Select Group from the list !");
        }
    }

    private void updateMemberList() {
        ArrayList<String> memberNames = new ArrayList<String>();
        if (selectedFrameGroup == null || selectedFrameGroup.getMembers().size() == 0) {
            memberNames.add("No Member Exist");
            memberList.disable();
            payerList.disable();
            splitList.disable();
        } else {
            memberList.enable();
            payerList.enable();
            splitList.enable();
        }
        if (selectedFrameGroup != null) {
            for (Member m : selectedFrameGroup.getMembers()) {
                memberNames.add(m.getName());
            }
        }

        memberList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return memberNames.size();
            }

            public String getElementAt(int i) {
                return memberNames.get(i);
            }
        });

        payerList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return memberNames.size();
            }

            public String getElementAt(int i) {
                return memberNames.get(i);
            }
        });

        splitList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return memberNames.size();
            }

            public String getElementAt(int i) {
                return memberNames.get(i);
            }
        });

    }

    private void deleteMemberBtnActionPerformed() {
        ArrayList<String> selectedMembers = (ArrayList<String>) memberList.getSelectedValuesList();
        if (selectedFrameGroup != null) {
            for (String s : selectedMembers) {
                selectedFrameGroup.deleteMember(s.hashCode());
            }
        }
        updateMemberList();
    }

    private void initializeAddActivityPanel() {

        amountInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountInputActionPerformed(evt);
            }
        });

        payerList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Please Choose Group!" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });

        payerList.disable();

        splitList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Please Choose Group!" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });

        splitList.disable();

        addActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActivityActionPerformed(evt);
            }
        });
    }

    private void amountInputActionPerformed(java.awt.event.ActionEvent evt) {
        ////
    }

    private void descriptionInputActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void appendTransactionBtnActionPerformed(java.awt.event.ActionEvent evt) {
        Group g = new Group(groupNameInput.getText());
        listOfGroups.addGroup(g);
        groupNameInput.setText("");
        updateGroupList();
        // select currently created group
        selectedFrameGroup = g;
        groupList.setSelectedValue(g.getName(), true);
    }

    private void addActivityActionPerformed(java.awt.event.ActionEvent evt) {

        ArrayList<String> selectedPayerList = (ArrayList<String>) payerList.getSelectedValuesList();
        ArrayList<String> selectedSplitList = (ArrayList<String>) splitList.getSelectedValuesList();

        if (selectedPayerList.size() > 1) {
            JOptionPane.showMessageDialog(null, "Please Select Only One Payer!");
            return;
        }
        if (selectedSplitList.size() == 0) {
            JOptionPane.showMessageDialog(null, "Please Select atleast One Splitter!");
            return;
        }
        Member selectedPayer = selectedFrameGroup.getMemberListMap().get(selectedPayerList.get(0).hashCode());
        // System.out.println("Payer is: " + selectedPayer.getName());
        // System.out.println("Size of split list: "+ selectedSplitList.size());
        double amountToSplit = Double.parseDouble(amountInput.getText()) / selectedSplitList.size();

        // update oweList of each split member chosen
        for (int i = 0; i < selectedSplitList.size(); i++) {
            Member m = selectedFrameGroup.getMemberListMap().get(selectedSplitList.get(i).hashCode());
            // if payer is also splitting up
            if (m == selectedPayer) {
                continue;
            }

            m.modifyOweList(selectedPayer, amountToSplit);
        }

        selectedFrameGroup.addTransactions(
                addTransaction(selectedSplitList, selectedPayer, Double.parseDouble(amountInput.getText())));

        payerList.clearSelection();
        splitList.clearSelection();
        amountInput.setText("");
        descriptionInput.setText("");
        selectedFrameGroup.simplifyGroupDebts();
        showOweListBalances();
        showSimplifiedBalances();
        updateTransactionsPanel();
    }

    private Transaction addTransaction(ArrayList<String> selectedSplitList, Member selectedPayer,
            double amountToSplit) {
        ArrayList<Member> membersToTransaction = new ArrayList<>();
        for (int i = 0; i < selectedSplitList.size(); i++) {
            Member m = selectedFrameGroup.getMemberListMap().get(selectedSplitList.get(i).hashCode());
            membersToTransaction.add(m);
        }
        Transaction oneTransaction = new Transaction(selectedPayer, descriptionInput.getText(), (float) amountToSplit,
                membersToTransaction);
        return oneTransaction;
    }

    public void initializeTransactionPanel() {
        showActivityList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "There are no transactions." };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        showActivityList.disable();
    }

    public void updateTransactionsPanel() {
        ArrayList<String> listedTransactions = new ArrayList<>();

        if (selectedFrameGroup.getTransactions() != null) {
            for (Transaction t : selectedFrameGroup.getTransactions()) {
                listedTransactions.add(t.getTransactionString());
            }
        }

        showActivityList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return listedTransactions.size();
            }

            public String getElementAt(int i) {
                return listedTransactions.get(i);
            }
        });
        showActivityList.disable();
    }

    private void showOweListBalances() {
        for (Member m : selectedFrameGroup.getMembers()) {
            for (Map.Entry<Member, Double> elm : m.getOweList().entrySet()) {
                if (elm.getValue() == 0)
                    continue;
                System.out.println(m.getName() + " " + "owes" + " " + elm.getKey().getName() + " " + elm.getValue());
            }
        }
        System.out.println("------");
    }

    private void showSimplifiedBalances() {
        for (Member m : selectedFrameGroup.getMembers()) {
            for (Map.Entry<Member, Double> elm : m.getSimplifiedDebtList().entrySet()) {
                if (elm.getValue() == 0)
                    continue;
                System.out.println(m.getName() + " " + "owes" + " " + elm.getKey().getName() + " " + elm.getValue());
            }
        }
        System.out.println("********");
    }

    private void memberNameInputActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void deleteActivityActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel activitiesLabel;
    private javax.swing.JPanel activityPanel;
    private javax.swing.JButton addActivity;
    private javax.swing.JLabel addMemberLabel;
    private javax.swing.JPanel addMemberPanel;
    private javax.swing.JPanel addTransactionPanel;
    private javax.swing.JTextField amountInput;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JButton createGroupBtn;
    private javax.swing.JButton createMemberBtn;
    private javax.swing.JButton deleteActivity;
    private javax.swing.JButton deleteGroupBtn;
    private javax.swing.JButton deleteMemberBtn;
    private javax.swing.JTextField descriptionInput;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel groupInputLabel;
    private javax.swing.JList<String> groupList;
    private javax.swing.JLabel groupListLabel;
    private javax.swing.JScrollPane groupListScrollPane;
    private javax.swing.JTextField groupNameInput;
    private javax.swing.JPanel groupPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> memberList;
    private javax.swing.JLabel memberListLabel;
    private javax.swing.JScrollPane memberListScrollPane;
    private javax.swing.JTextField memberNameInput;
    private javax.swing.JLabel payerLabel;
    private javax.swing.JList<String> payerList;
    private javax.swing.JScrollPane payerScrollPane;
    private javax.swing.JList<String> showActivityList;
    private javax.swing.JLabel splitLabel;
    private javax.swing.JList<String> splitList;
    private javax.swing.JScrollPane splitScrollPane;
    // balance panel variables
    private javax.swing.JPanel balancePanel;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JList<String> balanceList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> balanceSelector;
    private javax.swing.JLabel balanceMemberLabel;

    // End of variables declaration
}
